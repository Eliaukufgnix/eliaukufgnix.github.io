(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{285:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[t._v("#")]),t._v(" 数据库")]),t._v(" "),s("h2",{attrs:{id:"关系型数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据库"}},[t._v("#")]),t._v(" 关系型数据库")]),t._v(" "),s("h3",{attrs:{id:"基础语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础语句"}},[t._v("#")]),t._v(" 基础语句")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- sql语法规范:所有关键字大写的  用户自定义的根据用户实际情况来 但是数据库不区分大小写")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 四大基本语句")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" studentinfo\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 添加")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" Studentinfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("phone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("create_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'王五'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2023-03-13 13:00:00'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 特殊写法：约束性较强1）字段顺序必须和表的一样  2)所有字段都需要赋值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" Studentinfo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 千万小心：在写更新语句和删除语句的时候一定要检查条件。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 删除")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Studentinfo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 更新")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" Studentinfo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'王五'")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 条件查询   where")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Studentinfo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 多个条件   and    or")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" Name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'王明'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" Name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'王明111'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- top 查询")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TOP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--mysql")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- ORDER BY 排序   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- ASC   升序 从小到大")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- DESC  降序 从大到小")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" Name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" Name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ASC")]),t._v(" \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 语句分为5个阶段")]),t._v("\n\n结果集部分   表部分    条件部分       排序部分     分组部分\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- like 模糊匹配")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'王%'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%二'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%王%'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- between and 范围检索 包含1和5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" DistrictID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("Between")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" DistrictID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" DistrictID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- in  和not in  存在包含")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" DistrictID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- CASE WHEN THEN END  多种值的一个判断")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v("  Gendar "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" GendarText  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 聚合函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 聚合函数只能查询单一字段，不能得到该条数据的完整数据")]),t._v("\nsum  avg  max min\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MAX")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- group by  分组语句  将数据分组然后进行统计")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 根据什么字段group by 那么你的select后面就只能有这个字段，聚合函数可以出现在group by 的select后面")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Gendar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MAX")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" Gendar \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 联合查询语句")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 1确定你主表Student  查学生   附带要地区名字")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2确定关系两表之间的关系  Student（DistrictID）    S_Distrcit(Distrcit_ID)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 3确定你要的字段   Id Name Phone DistrictName")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("  s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DistrictName  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("  Student s "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" S_District  d\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DistrictID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DistrictID\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- INNER JOIN：要求数据必须能够关联起来，如果不能关联则数据不会被显示出来")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("class_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" Classes  c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ClassID\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- LEFT JOIN：以左侧表为主表，主表中有多少条数据就显示多少条数据，能关联则显示关联信息，不能关联则显示为NULL")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("class_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" Classes  c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ClassID\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- RIGHT JOIN")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("class_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("  Classes  c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" Student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ClassID\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- UNION 合并  注意:合并的时候两个类数据类型必须相同，相同内容会自动合并")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ID "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" class_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Classes\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- UNION ALL 区别：相同内容也不合并")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALL")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" class_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Classes\n")])])]),s("h3",{attrs:{id:"sql-server时间数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-server时间数据类型"}},[t._v("#")]),t._v(" SQL Server时间数据类型")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("数据类型")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("样式")]),t._v(" "),s("th",[t._v("存储")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("date")]),t._v(" "),s("td",[t._v("仅存储日期。从 0001 年 1 月 1 日 到 9999 年 12 月 31 日。")]),t._v(" "),s("td",[t._v("2020-04-15")]),t._v(" "),s("td",[t._v("3 bytes")])]),t._v(" "),s("tr",[s("td",[t._v("time")]),t._v(" "),s("td",[t._v("仅存储时间。精度为 100 纳秒。")]),t._v(" "),s("td",[t._v("13:23:22.5333333")]),t._v(" "),s("td",[t._v("3-5 bytes")])]),t._v(" "),s("tr",[s("td",[t._v("datetime")]),t._v(" "),s("td",[t._v("从 1753 年 1 月 1 日 到 9999 年 12 月 31 日 精度为 3.33 毫秒。")]),t._v(" "),s("td",[t._v("2020-04-15 13:24:16.920")]),t._v(" "),s("td",[t._v("8 bytes")])]),t._v(" "),s("tr",[s("td",[t._v("datetime2")]),t._v(" "),s("td",[t._v("从 1753 年 1 月 1 日 到 9999 年 12 月 31 日 精度为 100 纳秒。（ datetime的升级版 ）")]),t._v(" "),s("td",[t._v("2020-04-15 13:26:07.8100000")]),t._v(" "),s("td",[t._v("6-8 bytes")])]),t._v(" "),s("tr",[s("td",[t._v("smalldatetime")]),t._v(" "),s("td",[t._v("从 1900 年 1 月 1 日 到 2079 年 6 月 6 日 精度为 1 分钟。")]),t._v(" "),s("td",[t._v("2020-04-15 13:27:00")]),t._v(" "),s("td",[t._v("4 bytes")])]),t._v(" "),s("tr",[s("td",[t._v("datetimeoffset")]),t._v(" "),s("td",[t._v("与 datetime2 相同 外加时区偏移。")]),t._v(" "),s("td",[t._v("2020-04-15 13:28:01.3133333 +00:00")]),t._v(" "),s("td",[t._v("8-10 bytes")])]),t._v(" "),s("tr",[s("td",[t._v("timestamp")]),t._v(" "),s("td",[t._v("存储唯一的数字，每当创建或修改某行时，该数字会更新。 timestamp 基于内部时钟，不对应真实时间。 每个表只能有一个 timestamp 变量。（ 时间戳 ）")]),t._v(" "),s("td",[t._v("0x0000000000000FA0")]),t._v(" "),s("td")])])]),t._v(" "),s("h3",{attrs:{id:"分页查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分页查询"}},[t._v("#")]),t._v(" 分页查询")]),t._v(" "),s("p",[t._v("1、方式一：使用NOT IN子查询")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("top")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" S_Province\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" ProvinceID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TOP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" ProvinceID "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" S_Province "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" ProvinceID "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("asc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" ProvinceID\n")])])]),s("p",[t._v("**2、方式二：**ROW_NUMBER() OVER(ORDER BY )")]),t._v(" "),s("p",[t._v("初始版：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 分页查询公式-row_number()")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("top")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pageSize")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- rownumber是别名，可按自己习惯取")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" row_number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("over")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 主键 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("asc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" rownumber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" temp_row\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" rownumber"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pageIndex")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pageSize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TOP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ROW_NUMBER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OVER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" ProvinceID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Row")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" S_Province"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" t \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ProvinceID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n")])])]),s("p",[t._v("上述例子中的子查询语句会查询全表，效率较低，可以对子查询内容进行优化。")]),t._v(" "),s("p",[t._v("优化版："),s("strong",[t._v("推荐使用该方式")]),t._v("，效率较高")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 分页查询公式-row_number()-优化版本")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- rownumber是别名，可按自己习惯取")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("top")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pageIndex")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pageSize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" row_number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("over")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 主键 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("asc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" rownumber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" temp_row\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" rownumber"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pageIndex")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pageSize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("3、方式三："),s("strong",[t._v("只有SQL Server2012之后的版本才能使用")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 分页查询公式-offset /fetch next")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 主键 或 其他索引列 \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @pageIndex：页码、@pageSize：每页记录数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("offset")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pageIndex")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pageSize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rows")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fetch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("next")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@pageSize")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rows")]),t._v(" only"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 分页查询第2页，每页有10条记录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" S_Province\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" ProvinceID\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OFFSET")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROWS")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FETCH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("NEXT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROWS")]),t._v(" ONLY\n")])])]),s("h3",{attrs:{id:"三大范式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三大范式"}},[t._v("#")]),t._v(" 三大范式")]),t._v(" "),s("p",[t._v("第一范式(1NF)：属性不可分割，即每个属性都是不可分割的原子项。(实体的属性即表中的列)")]),t._v(" "),s("p",[t._v("第二范式(2NF)：满足第一范式；且不存在部分依赖，即非主属性必须完全依赖于主属性。(主属性即主键；完全依赖是针对于联合主键的情况，非主键列不能只依赖于主键的一部分)")]),t._v(" "),s("p",[t._v("第三范式(3NF)：满足第二范式；且不存在传递依赖，即非主属性不能与非主属性之间有依赖关系，非主属性必须直接依赖于主属性，不能间接依赖主属性。")]),t._v(" "),s("h3",{attrs:{id:"存储过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储过程"}},[t._v("#")]),t._v(" 存储过程")]),t._v(" "),s("p",[t._v("介绍")]),t._v(" "),s("p",[t._v("数据库中内置的程序段，当运行时，将程序段中的SQL语句依次执行。相当于程序中的函数，关键字procedure 可省略写为proc")]),t._v(" "),s("p",[t._v("作用：存储过程内部可以进行业务逻辑运算")]),t._v(" "),s("p",[t._v("优点：")]),t._v(" "),s("p",[t._v("1.相对于SQL语句，存储过程更安全（体现在存储过程参数传递上）")]),t._v(" "),s("p",[t._v("2.更高效，存储过程只需要创建时编译，后续执行无需频繁编译。")]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("p",[t._v("1麻烦")]),t._v(" "),s("p",[t._v("2不便于管理")]),t._v(" "),s("h4",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("p",[t._v("1、创建存储过程")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("procedure")]),t._v(" 名称\n@参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("名 参数类型，@参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("名 参数类型\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("\n 存储过程执行的内容\ngo\n")])])]),s("p",[t._v("2、修改存储过程")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("procedure")]),t._v(" 名称\n@参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("名 参数类型，@参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("名 参数类型\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("\n 存储过程执行的内容\ngo\n")])])]),s("p",[t._v("3、使用存储过程，关键字execute，可省略写为exec")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("execute")]),t._v(" 名称 参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("p",[s("strong",[t._v("带返回值的存储过程，两种返回值方式")])]),t._v(" "),s("h4",{attrs:{id:"return"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#return"}},[t._v("#")]),t._v(" return")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" 名称\n@变量名"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 数据类型"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n@变量名"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 数据类型"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("\n 存储过程执行的内容\ngo\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- return类型返回值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 特点：1只能返回一个结果  2只能返回数字结果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" pr_insert_studentInfo_return\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@s_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@s_birth")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@s_sex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" StudentInfo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@s_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@s_birth")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@s_sex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'132'")]),t._v("\ngo\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 声明变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@return_value")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@return_value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pr_insert_studentInfo_return "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@return_value")]),t._v("\n")])])]),s("h4",{attrs:{id:"output"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#output"}},[t._v("#")]),t._v(" output")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--output返回类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--特点：1返回类型不确定 2返回个数不限制")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" pr_insert_studentInfo_output\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@s_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@s_birth")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@s_sex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@newid")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--约定该参数为output类型参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@new_name")]),t._v(" nvarchar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" output\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" StudentInfo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@s_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@s_birth")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@s_sex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@newid")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@identity")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--全局变量，获取本次插入数据的主键")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@new_name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@s_name")]),t._v(" \ngo\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@newid")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@new_name")]),t._v(" nvarchar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exec")]),t._v(" pr_insert_studentInfo_output "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'admin'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1999-01-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@newid")]),t._v(" output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@new_name")]),t._v(" output\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@newid")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@new_name")]),t._v("\n")])])]),s("p",[t._v("return 和 output\nreturn编写上比较简单，output比较灵活。")]),t._v(" "),s("h4",{attrs:{id:"net对于存储过程的调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#net对于存储过程的调用"}},[t._v("#")]),t._v(" .NET对于存储过程的调用")]),t._v(" "),s("p",[t._v("1、存储过程的写操作")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//pr_delete_StudentInfo_by_id")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//存储过程调用还是由ado.net和jdbc操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SqlConnection")]),t._v(" connection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("SqlConnection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ConfigHelper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetConnectionString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sqlserver"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除  写操作")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SqlCommand")]),t._v(" sqlCommand "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("SqlCommand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pr_delete_StudentInfo_by_id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("connection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//为ado指定操作方式为存储过程方式")]),t._v("\n    sqlCommand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CommandType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CommandType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StoredProcedure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置param参数")]),t._v("\n    sqlCommand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@s_id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SqlDbType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//执行存储过程")]),t._v("\n    connection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sqlCommand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ExecuteNonQuery")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    connection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("2、存储过程的读操作")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SqlConnection")]),t._v(" connection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("SqlConnection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ConfigHelper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetConnectionString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sqlserver"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DataSet+DataAdapter")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SqlDataAdapter")]),t._v(" adapter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("SqlDataAdapter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建一个空适配器")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储过程所有处理都是有Command类处理的")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SqlCommand")]),t._v(" sqlCommand "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("SqlCommand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pr_query_StudentInfo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" connection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        sqlCommand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CommandType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CommandType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StoredProcedure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 适配器装载一个命令类对象(携带了一个查询的存储过程)")]),t._v("\n        adapter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SelectCommand "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sqlCommand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSet")]),t._v(" ds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("DataSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        adapter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fill")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        GridView1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DataSource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        GridView1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("DataBind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DataReader+Command")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SqlCommand")]),t._v(" sqlCommand "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("SqlCommand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pr_query_StudentInfo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" connection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        sqlCommand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CommandType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CommandType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StoredProcedure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        connection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SqlDataReader")]),t._v(" reader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sqlCommand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ExecuteReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            Response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"sql注入式攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql注入式攻击"}},[t._v("#")]),t._v(" SQL注入式攻击")]),t._v(" "),s("p",[t._v("概念：所谓SQL注入式攻击，就是输入域或页面请求的查询字符串，欺骗服务器执行恶意的SQL命令。在某些表单中，用户输入的内容直接用来构造（或者影响）动态SQL命令的输入参数，通过植入特殊的SQL命令实现注入攻击效果。")]),t._v(" "),s("p",[t._v("常见的SQL注入式攻击过程类如：")]),t._v(" "),s("p",[t._v("⑴ 某个"),s("a",{attrs:{href:"https://baike.baidu.com/item/ASP.NET/197912",target:"_blank",rel:"noopener noreferrer"}},[t._v("ASP.NET"),s("OutboundLink")],1),t._v(" Web应用有一个登录页面，这个登录页面控制着用户是否有权访问应用，它要求用户输入一个名称和密码。")]),t._v(" "),s("p",[t._v("⑵ 登录页面中输入的内容将直接用来构造动态的SQL命令，或者直接用作"),s("a",{attrs:{href:"https://baike.baidu.com/item/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"}},[t._v("存储过程"),s("OutboundLink")],1),t._v("的参数。下面是ASP.NET应用构造查询的一个例子：")]),t._v(" "),s("p",[t._v("System.Text.StringBuilder query = new System.Text.StringBuilder(")]),t._v(" "),s("p",[t._v('"SELECT * from Users WHERE login = \'")')]),t._v(" "),s("p",[t._v("."),s("a",{attrs:{href:"https://baike.baidu.com/item/Append/8293363",target:"_blank",rel:"noopener noreferrer"}},[t._v("Append"),s("OutboundLink")],1),t._v("(txtLogin.Text).Append(\"' AND password='\")")]),t._v(" "),s("p",[t._v('.Append(txtPassword.Text).Append("\'");')]),t._v(" "),s("p",[t._v("⑶ 攻击者在用户名字和密码输入框中输入\"'或'1'='1\"之类的内容，例如a' or '1'='1。")]),t._v(" "),s("p",[t._v("⑷ 用户输入的内容提交给服务器之后，服务器运行上面的"),s("a",{attrs:{href:"https://baike.baidu.com/item/ASP.NET/197912",target:"_blank",rel:"noopener noreferrer"}},[t._v("ASP.NET"),s("OutboundLink")],1),t._v("代码构造出查询用户的SQL命令，但由于攻击者输入的内容非常特殊，所以最后得到的SQL命令变成：SELECT * from Users WHERE login = '' or '1'='1' AND password = '' or '1'='1'。")]),t._v(" "),s("p",[t._v("⑸ 服务器执行查询或存储过程，将用户输入的身份信息和服务器中保存的身份信息进行对比。")]),t._v(" "),s("p",[t._v("⑹ 由于SQL命令实际上已被注入式攻击修改，已经不能真正验证用户身份，所以系统会错误地授权给攻击者。")]),t._v(" "),s("p",[t._v("如果攻击者知道应用会将"),s("a",{attrs:{href:"https://baike.baidu.com/item/%E8%A1%A8%E5%8D%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("表单"),s("OutboundLink")],1),t._v("中输入的内容直接用于验证身份的查询，他就会尝试输入某些特殊的SQL字符串篡改查询改变其原来的功能，欺骗系统授予"),s("a",{attrs:{href:"https://baike.baidu.com/item/%E8%AE%BF%E9%97%AE",target:"_blank",rel:"noopener noreferrer"}},[t._v("访问"),s("OutboundLink")],1),t._v("权限。")]),t._v(" "),s("h3",{attrs:{id:"触发器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#触发器"}},[t._v("#")]),t._v(" 触发器")]),t._v(" "),s("p",[t._v("触发器是一种特殊的存储过程，它的运行是数据库自行进行调度的，当触发器的条件触发时，程序会自行调用。")]),t._v(" "),s("p",[s("strong",[t._v("触发器使用的两张临时表")])]),t._v(" "),s("p",[t._v("添加临时表inserted：存放新数据")]),t._v(" "),s("p",[t._v("删除临时表deleted：存放旧数据")]),t._v(" "),s("p",[s("strong",[t._v("语法")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trigger")]),t._v(" 名称\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 表明  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v("  操作名\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("\n\ngo\n")])])]),s("h4",{attrs:{id:"mssql检测数据执行命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mssql检测数据执行命令"}},[t._v("#")]),t._v(" MSSQL检测数据执行命令")]),t._v(" "),s("p",[s("strong",[t._v("SET STATISTICS PROFILE ON")]),t._v("：显示分析、编译和执行查询所需的时间（以毫秒为单位）。\n"),s("strong",[t._v("SET STATISTICS IO ON")]),t._v("：报告与语句内引用的每个表的扫描数、逻辑读取数（在高速缓存中访问的页数）和物理读取数（访问磁盘的次数）有关的信息。\n"),s("strong",[t._v("SET STATISTICS TIME ON")]),t._v("：显示每个查询执行后的结果集，代表查询执行的配置文件。")]),t._v(" "),s("p",[t._v("通过设置可视化工具设置")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210522003526480.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzMzkxNDk5,size_16,color_FFFFFF,t_70",alt:"img"}})]),t._v(" "),s("h3",{attrs:{id:"游标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#游标"}},[t._v("#")]),t._v(" 游标")]),t._v(" "),s("p",[t._v("游标类似C语言中的指针，由于数据库是面向集合的，并不是面向对象，所以在进行进行逐行获取时存在天生的缺点。")]),t._v(" "),s("p",[t._v("MSSQL数据库为了解决这一问题，在MSSQL中设置了游标的概念。")]),t._v(" "),s("p",[s("strong",[t._v("作用")])]),t._v(" "),s("p",[t._v("游标可以将集合数据存入游标中，然后依次按位获取集合中的个体值。")]),t._v(" "),s("p",[s("strong",[t._v("缺点")])]),t._v(" "),s("p",[t._v("游标将使数据库数据读取的效率大大降低，在不得已的情况下，尽量不要去使用。")]),t._v(" "),s("p",[t._v("语法")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 针对某个结果集定义成一个游标")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" 游标名 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cursor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 打开游标")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open")]),t._v(" 游标名\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 定义一个变量让游标的值进行变化")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@current_aid")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fetch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("next")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 游标名 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@current_aid")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--让游标下移 取出的值交给变量@current_aid")]),t._v("\n 要执行的"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sql")]),t._v("操作\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @@fetch_status表示游标是否可以下移，如果为0则可继续")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 0 FETCH 语句成功")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- -1 FETCH 语句失败或此行不在结果集中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- -2 被提取的行不存在")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@FETCH_STATUS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fetch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("next")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" cursorArticleId "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@current_aid")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("comment")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" is_delete"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@is_delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" aid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@current_aid")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 关闭游标")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("close")]),t._v(" 游标名\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 释放游标")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("deallocate")]),t._v(" 游标名\n")])])]),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--游标 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--删人  删文章")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--复杂的业务逻辑 proc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" pr_updateUser_isdelete\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@uid")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@is_delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--删除一个人的数据")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" users "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" is_delete"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@is_delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" uid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@uid")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--删除一个人的所有文章")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" article "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" is_delete"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@is_delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" uid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@uid")]),t._v("\n \n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--由于每一个文章都有多个评论，所以要遍历文章  拿到每一个文章的ID去删除他的评论")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" cursorArticleId "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cursor")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" aid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" article "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" uid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@uid")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open")]),t._v(" cursorArticleId \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@current_aid")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fetch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("next")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" cursorArticleId "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@current_aid")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--让游标下移 取出第一个文章id交给变量@current_aid")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--更新评论")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("comment")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" is_delete"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@is_delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" aid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@current_aid")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- @@fetch_status表示游标是否可以下移，如果为0则可继续")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@FETCH_STATUS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fetch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("next")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" cursorArticleId "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@current_aid")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("comment")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" is_delete"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@is_delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" aid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@current_aid")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("close")]),t._v(" cursorArticleId\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("deallocate")]),t._v(" cursorArticleId\ngo\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exec")]),t._v(" pr_updateUser_isdelete "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Users\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Article\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Comment")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Reply\n")])])]),s("h3",{attrs:{id:"事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[t._v("#")]),t._v(" 事务")]),t._v(" "),s("p",[t._v("事务：事务中的语句如果要执行都执行，如果有一个不执行所有语句都不执行")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 创建事务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transaction")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 回滚")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rollback")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 各个表回到自己的原始状态")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 提交事务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transaction")]),t._v(" \n")])])]),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--一个操作里面有10条语句")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--业务场景：A银行  B银行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--用户admin在两个行中分别开设了两个账号，admin从A银行进行金额转账 转到B银行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" pr_zhuanzhang\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@a_account")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@zmoney")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@ymoney")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@ymoney")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("money "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" abank "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Account"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@a_account")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--查出余额")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@zmoney")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@ymoney")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'余额不足'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--创建事务")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transaction")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--先从a银行减掉")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" abank "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" money"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("money"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@zmoney")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Account"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@a_account")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--把减掉的钱加到B银行")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" bbank "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" money"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("money"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@zmoney")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" Account"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@a_account")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@ERROR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rollback")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--各个表回到自己的原始状态")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transaction")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--提交")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\ngo\n\n  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exec")]),t._v(" pr_zhuanzhang "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'admin'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" abank  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" bbank\n")])])]),s("h4",{attrs:{id:"自动提交事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动提交事务"}},[t._v("#")]),t._v(" 自动提交事务")]),t._v(" "),s("p",[t._v("每条单独的语句都是一个事务。")]),t._v(" "),s("p",[t._v("在自动提交模式下， 每个数据库操作是在执行时已提交的事务。 此模式适合用于包含单个 SQL 语句的许多实际的事务。 不需要分隔，或者指定的这些事务完成。 在数据库中不支持事务的情况下，自动提交模式是唯一支持的模式。 在此类数据库语句仅在提交后可以执行它们并没有方法回滚它们;它们因此始终处于自动提交模式。")]),t._v(" "),s("p",[t._v("自动提交事务为默认设置，无需额外进行设置。")]),t._v(" "),s("h4",{attrs:{id:"隐式事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式事务"}},[t._v("#")]),t._v(" 隐式事务")]),t._v(" "),s("p",[t._v("隐式事务通过设置SET IMPLICIT_TRANSACTIONS ON 语句，将隐性事务模式设置为打开。")]),t._v(" "),s("p",[t._v("一旦隐式事务打开，数据库实例第一次执行alert table，insert，create，open，delete，revoke，drop，select，fetch，truncate table，grant，update语句时，会自动开启一个事务，开启的事务需要利用commit或rollback结束；")]),t._v(" "),s("p",[t._v("当事务结束时，一旦运行以上类型的语句，会再次自动开启一个新的事务，这样就形成了一个事务链。")]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 开启隐式事务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" IMPLICIT_TRANSACTIONS "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dbo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ORDERINFO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CUSTOMID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("PRODUCTID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ORDERQUANTITY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21110")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'20'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \nGO\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" ORDERINFO "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" PRODUCTID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("220000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" CUSTOMID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("\nGO\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 事务结束，进行提交")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 关闭隐式事务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" IMPLICIT_TRANSACTIONS "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OFF")]),t._v("\n")])])]),s("h4",{attrs:{id:"显式事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显式事务"}},[t._v("#")]),t._v(" 显式事务")]),t._v(" "),s("p",[t._v("每个事务均以 BEGIN TRANSACTION 语句显式开始，以 COMMIT 或 ROLLBACK 语句显式结束。")]),t._v(" "),s("h4",{attrs:{id:"事务特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务特性"}},[t._v("#")]),t._v(" 事务特性")]),t._v(" "),s("p",[t._v("事务是作为单个逻辑工作单元执行的一系列操作。一个逻辑工作单元必须有四个属性，称为原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）和持久性（Durability）属性，只有这样才能成为一个事务。")]),t._v(" "),s("h4",{attrs:{id:"原子性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原子性"}},[t._v("#")]),t._v(" 原子性")]),t._v(" "),s("p",[t._v("事务必须是原子工作单元；对于其数据修改，要么全都执行，要么全都不执行。")]),t._v(" "),s("h4",{attrs:{id:"一致性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一致性"}},[t._v("#")]),t._v(" 一致性")]),t._v(" "),s("p",[t._v("事务在完成时，必须使所有的数据都保持一致状态。在相关数据库中，所有规则都必须应用于事务的修改，以保持所有数据的完整性。事务结束时，所有的内部数据结构（如 B 树索引或双向链表）都必须是正确的。")]),t._v(" "),s("h4",{attrs:{id:"隔离性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隔离性"}},[t._v("#")]),t._v(" 隔离性")]),t._v(" "),s("p",[t._v("由并发事务所做的修改必须与任何其他并发事务所做的修改隔离。事务识别数据时数据所处的状态，要么是另一并发事务修改它之前的状态，要么是第二个事务修改它之后的状态，事务不会识别中间状态的数据。这称为可串行性，因为它能够重新装载起始数据，并且重播一系列事务，以使数据结束时的状态与原始事务执行的状态相同。")]),t._v(" "),s("h4",{attrs:{id:"持久性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#持久性"}},[t._v("#")]),t._v(" 持久性")]),t._v(" "),s("p",[t._v("事务完成之后，它对于系统的影响是永久性的。该修改即使出现系统故障也将一直保持。")]),t._v(" "),s("h4",{attrs:{id:"事务隔离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务隔离"}},[t._v("#")]),t._v(" 事务隔离")]),t._v(" "),s("p",[t._v("隔离级别用于决定如何控制并发用户读写数据的操作。")]),t._v(" "),s("p",[t._v("读操作默认使用共享锁；写操作需要使用排它锁。")]),t._v(" "),s("p",[t._v("读操作能够控制它的处理的方式，写操作不能控制它的处理方式。")]),t._v(" "),s("h3",{attrs:{id:"锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁"}},[t._v("#")]),t._v(" 锁")]),t._v(" "),s("h4",{attrs:{id:"mssql锁的种类-锁的说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mssql锁的种类-锁的说明"}},[t._v("#")]),t._v(" MSSQL锁的种类/锁的说明")]),t._v(" "),s("p",[t._v("锁定数据库的一个表")]),t._v(" "),s("p",[t._v("SELECT  *  FROM  table  WITH  (HOLDLOCK)\n其他事务可以读取表，但不能更新删除")]),t._v(" "),s("p",[t._v("SELECT  *  FROM  table  WITH  (TABLOCKX)\n其他事务不能读取表,更新和删除")]),t._v(" "),s("p",[t._v("SELECT  语句中“加锁选项”的功能说明\nSQL  Server提供了强大而完备的锁机制来帮助实现数据库系统的并发性和高性能。用户既能使用SQL  Server的缺省设置也可以在select  语句中使用“加锁选项”来实现预期的效果。  本文介绍了SELECT语句中的各项“加锁选项”以及相应的功能说明。\n功能说明：　\nNOLOCK（不加锁）\n此选项被选中时，SQL  Server  在读取或修改数据时不加任何锁。  在这种情况下，用户有可能读取到未完成事务（Uncommited  Transaction）或回滚(Roll  Back)中的数据,  即所谓的“脏数据”。")]),t._v(" "),s("p",[t._v("HOLDLOCK（保持锁）\n此选项被选中时，SQL  Server  会将此共享锁保持至整个事务结束，而不会在途中释放。")]),t._v(" "),s("p",[t._v("UPDLOCK（修改锁）\n此选项被选中时，SQL  Server  在读取数据时使用修改锁来代替共享锁，并将此锁保持至整个事务或命令结束。使用此选项能够保证多个进程能同时读取数据但只有该进程能修改数据。")]),t._v(" "),s("p",[t._v("TABLOCK（表锁）\n此选项被选中时，SQL  Server  将在整个表上置共享锁直至该命令结束。  这个选项保证其他进程只能读取而不能修改数据。")]),t._v(" "),s("p",[t._v("PAGLOCK（页锁）\n此选项为默认选项，  当被选中时，SQL  Server  使用共享页锁。")]),t._v(" "),s("p",[t._v("TABLOCKX（排它表锁）\n此选项被选中时，SQL  Server  将在整个表上置排它锁直至该命令或事务结束。这将防止其他进程读取或修改表中的数据。")]),t._v(" "),s("h4",{attrs:{id:"并发产生的问题-锁定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并发产生的问题-锁定"}},[t._v("#")]),t._v(" 并发产生的问题——锁定")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--数据连接1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tran")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" books "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" bookname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'C#'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("waitfor")]),t._v(" delay "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0:0:5'")]),t._v("  \n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'事务1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tran")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--数据连接2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tran")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" student "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'事务1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("waitfor")]),t._v(" delay "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0:0:5'")]),t._v("  \n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" books "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" bookname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'python'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tran")]),t._v("\n\n")])])]),s("p",[t._v("在多用户都用事务同时访问同一个数据资源的情况下，就会造成以下几种数据错误。")]),t._v(" "),s("ul",[s("li",[t._v("更新丢失：多个用户同时对一个数据资源进行更新，必定会产生被覆盖的数据，造成数据读写异常。")]),t._v(" "),s("li",[t._v("不可重复读：如果一个用户在一个事务中多次读取一条数据，而另外一个用户则同时更新啦这条数据，造成第一个用户多次读取数据不一致。")]),t._v(" "),s("li",[t._v("脏读：第一个事务读取第二个事务正在更新的数据表，如果第二个事务还没有更新完成，那么第一个事务读取的数据将是一半为更新过的，一半还没更新过的数据，这样的数据毫无意义。")]),t._v(" "),s("li",[t._v("幻读：第一个事务读取一个结果集后，第二个事务，对这个结果集经行增删操作，然而第一个事务中再次对这个结果集进行查询时，数据发现丢失或新增。")])]),t._v(" "),s("p",[t._v("然而锁定，就是为解决这些问题所生的，他的存在使得一个事务对他自己的数据块进行操作的时候，而另外一个事务则不能插足这些数据块。这就是所谓的锁定。")]),t._v(" "),s("h4",{attrs:{id:"死锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#死锁"}},[t._v("#")]),t._v(" 死锁")]),t._v(" "),s("h5",{attrs:{id:"死锁的四个必要条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#死锁的四个必要条件"}},[t._v("#")]),t._v(" "),s("strong",[t._v("死锁的四个必要条件")])]),t._v(" "),s("p",[t._v("1、互斥条件：一个资源每次只能被一个进程使用；")]),t._v(" "),s("p",[t._v("2、请求与保持条件：一个进程因请求资源而阻塞时，对已获得的资源保持不放；")]),t._v(" "),s("p",[t._v("3、不剥夺条件:进程已获得的资源，在末使用完之前，不能强行剥夺；")]),t._v(" "),s("p",[t._v("4、循环等待条件:若干进程之间形成一种头尾相接的循环等待资源关系；")]),t._v(" "),s("p",[t._v("第一个事务（称为A）：先更新a表 ---\x3e>停顿5秒----\x3e>更新b表")]),t._v(" "),s("p",[t._v("第二个事务（称为B）：先更新b表---\x3e>停顿5秒----\x3e>更新a表")]),t._v(" "),s("p",[t._v("先执行事务A----5秒之内---执行事务B，出现死锁现象。")]),t._v(" "),s("p",[t._v("过程是这样子的：")]),t._v(" "),s("ol",[s("li",[t._v("A更新a表，请求a的排他锁，成功。")]),t._v(" "),s("li",[t._v("B更新b表，请求b的排他锁，成功。")]),t._v(" "),s("li",[t._v("5秒过后")]),t._v(" "),s("li",[t._v("A更新b，请求b的排它锁，由于B占用着b的排它锁，等待。")]),t._v(" "),s("li",[t._v("B更新a，请求a的排它锁，由于A占用着a的排它锁，等待。")])]),t._v(" "),s("p",[t._v("这样相互等待对方释放资源，造成资源读写拥挤堵塞的情况，就被称为死锁现象，也叫做阻塞。")]),t._v(" "),s("p",[t._v("然而数据库并没有出现无限等待的情况，是因为数据库搜索引擎会定期检测这种状况，一旦发现有情况，立马选择一个事务作为牺牲品。牺牲的事务，将会回滚数据。")]),t._v(" "),s("p",[t._v("然而数据库并没有出现无限等待的情况，是因为数据库搜索引擎会定期检测这种状况，一旦发现有情况，立马选择一个事务作为牺牲品。")]),t._v(" "),s("p",[t._v("哪个人会被退回来，作为牺牲品，这个我们是可以控制的。控制语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("set deadlock_priority  <级别>\n")])])]),s("p",[t._v("死锁处理的优先级别为 low<normal<high，不指定的情况下默认为normal，牺牲品为随机。如果指定，牺牲品为级别低的。")]),t._v(" "),s("p",[t._v("还可以使用数字来处理标识级别：-10到-5为low，-5为normal，-5到10为high。")]),t._v(" "),s("h5",{attrs:{id:"减少死锁的发生-提高数据库性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#减少死锁的发生-提高数据库性能"}},[t._v("#")]),t._v(" 减少死锁的发生，提高数据库性能")]),t._v(" "),s("p",[t._v("死锁耗时耗资源，然而在大型数据库中，高并发带来的死锁是不可避免的，所以我们只能让其变的更少。")]),t._v(" "),s("ol",[s("li",[t._v("按照同一顺序访问数据库资源，上述例子就不会发生死锁")]),t._v(" "),s("li",[t._v("保持是事务的简短，尽量不要让一个事务处理过于复杂的读写操作。事务过于复杂，占用资源会增多，处理时间增长，容易与其它事务冲突，提升死锁概率。")]),t._v(" "),s("li",[t._v("尽量不要在事务中要求用户响应，比如修改新增数据之后在完成整个事务的提交，这样延长事务占用资源的时间，也会提升死锁概率。")]),t._v(" "),s("li",[t._v("尽量减少数据库的并发量。")]),t._v(" "),s("li",[t._v("尽可能使用分区表，分区视图，把数据放置在不同的磁盘和文件组中，分散访问保存在不同分区的数据，减少因为表中放置锁而造成的其它事务长时间等待。")]),t._v(" "),s("li",[t._v("避免占用时间很长并且关系表复杂的数据操作。")]),t._v(" "),s("li",[t._v("使用较低的隔离级别，使用较低的隔离级别比使用较高的隔离级别持有共享锁的时间更短。这样就减少了锁争用。")])]),t._v(" "),s("h3",{attrs:{id:"视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[t._v("#")]),t._v(" 视图")]),t._v(" "),s("p",[t._v("数据库中数据查询后产生的结果集，用户读取显示数据使用。")]),t._v(" "),s("p",[t._v("不允许对视图进行修改。")]),t._v(" "),s("h4",{attrs:{id:"查询缓存清理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询缓存清理"}},[t._v("#")]),t._v(" 查询缓存清理")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 将当前数据库的全部脏页写入磁盘。“脏页”是已输入缓存区高速缓存且已修改但尚未写入磁盘的数据页。\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--  CHECKPOINT 可创建一个检查点，在该点保证全部脏页都已写入磁盘，从而在以后的恢复过程中节省时间。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHECKPOINT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--2. 若要从缓冲池中删除清除缓冲区，请首先使用 CHECKPOINT 生成一个冷缓存。这可以强制将当前数据库的全部脏页写入磁盘，然后清除缓冲区。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--  完成此操作后，便可发出 DBCC DROPCLEANBUFFERS 命令来从缓冲池中删除所有缓冲区。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DBCC")]),t._v(" DROPCLEANBUFFERS\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--3. 释放过程缓存将导致系统重新编译某些语句（例如，即席 SQL 语句），而不重用缓存中的语句。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DBCC")]),t._v(" FREEPROCCACHE\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--4. 从所有缓存中释放所有未使用的缓存条目。SQL Server 2005 Database Engine 会事先在后台清理未使用的缓存条目，以使内存可用于当前条目。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 但是，可以使用此命令从所有缓存中手动删除未使用的条目。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DBCC")]),t._v(" FREESYSTEMCACHE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ALL'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--5. 要接着执行你的查询,不然SQLServer会时刻的自动往缓存里读入最有可能需要的数据页.")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("CHECKPOINT;\nDBCC DROPCLEANBUFFERS;\nDBCC FREEPROCCACHE;\nDBCC FREESYSTEMCACHE ('ALL');\nSET STATISTICS TIME ON ;\n--查询条件\nSET STATISTICS TIME OFF;\n")])])]),s("h3",{attrs:{id:"索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),s("p",[t._v("索引相当于是数据库表的一种特殊的目录。SQLServer提供了两种索引：聚集索引和非聚集索引。")]),t._v(" "),s("p",[s("strong",[t._v("聚集索引")])]),t._v(" "),s("p",[t._v("表示物理上的连续性。")]),t._v(" "),s("p",[t._v("字典：")]),t._v(" "),s("p",[t._v("资")]),t._v(" "),s("p",[t._v("方法：1通过拼音首字母查询    A B C                    物理连续")]),t._v(" "),s("p",[t._v("方法：2通过偏旁查找              贝字底偏旁           逻辑连续")]),t._v(" "),s("p",[s("strong",[t._v("非聚集索引")])]),t._v(" "),s("p",[t._v("表示逻辑上的连续性。")]),t._v(" "),s("p",[t._v("聚集索引和非聚集索引的应用场景"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190318221423928.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMjIzNjg4,size_16,color_FFFFFF,t_70",alt:"img"}})]),t._v(" "),s("p",[t._v("比如：返回某一范围内的数据中的一项数据。比如：我们的一个表中有一个时间字段，恰好我们把聚合索引建立在了该字段上，这个时候我们查询2019年1月1日到2019年12月30日之间的全部数据时，这个速度将会是很快，因为我们的这个字典正文是通过日期来进行排序的，聚类索引只需要找到要检索的所有数据中的开头和结尾数据就行；如果我们使用非聚集索引，那么还要查到2019年1月2号对应的页码，然后再根据页码来查询数据，那将是很耗时的。")]),t._v(" "),s("h4",{attrs:{id:"关于索引的不正确理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于索引的不正确理解"}},[t._v("#")]),t._v(" 关于索引的不正确理解")]),t._v(" "),s("p",[t._v("1主键就是聚集索引")]),t._v(" "),s("p",[t._v("通常来说，我们会在每个表中建立一个id字段，用来区分每一条数据，而且通常来说会使用id自增长配置，每次自增为1。聚集索引最大的好处就是建立查询数据的一个区间，降低查询数据的总条数，避免全表查询。在实际应用中，因为id是自动生成的，程序员并不知道每条记录所对应的id，所以我们很难在实际应用中进行一个id号作为查询条件。这也让id号作为聚集索引成为了一种资源浪费。其次，让每个id号都有不同的字段作为聚集索引页不符合“在大范围数量个不同的值作为非聚集索引”规则。所以说，这种错误操作是针对于用户经常修改记录内容，特别是索引项的时候还会起到负作用，但是对于查询速度并没有多大的影响。")]),t._v(" "),s("p",[t._v("一般来说，对于erp系统的首页都会显示每个用户为签收的文件或者会议。虽然我们的where语句可以仅仅限制当前用户尚未签收的条件，但是如果您的系统已经建立了很长时间，并且数据量庞大，那么每个用户打开首页的时候都进行了一次全表扫描，这样做的意义不是很大，而且对于1月之前的文件信息，用户已经进行处理完成了。如果说还进行一个多余数据查询，只是增加了数据库的开销而已。所以说，我们完全可以让用户打开系统首页的时候，数据库仅仅查询了这个用户近3个月的未处理的文件就可以了。通过“时间日期”这个字段来限制表的扫描条数，提高查询速度。如果说我们所使用的办公自动化系统，已经存在了2年的时间，那么从理论上来讲，查询速度将是原来的8倍之上。")]),t._v(" "),s("p",[t._v("2.【只要建立索引就可以提高查询速度】 DBA")]),t._v(" "),s("p",[t._v("3.【把所有需要提高查询速度的字段都加进聚集索引，用于提高查询效率】")]),t._v(" "),s("h4",{attrs:{id:"使用索引总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用索引总结"}},[t._v("#")]),t._v(" 使用索引总结")]),t._v(" "),s("p",[t._v("关于索引的使用问题，如果使用不当，不仅不会提高检索效率，如果过多或不当的索引配置，会导致系统效率低下。因为用户在每张表汇总加入一个索引，那么数据库就要做更多的工作。过多的索引甚至会导致索引碎片效应。")]),t._v(" "),s("h3",{attrs:{id:"sql临时表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql临时表"}},[t._v("#")]),t._v(" SQL临时表")]),t._v(" "),s("p",[t._v("临时表与永久表相似，但临时表存储在tempdb中，当不再使用时会自动删除。临时表有两种类型：本地和全局。它们在名称、可见性以及可用性上有区别。")]),t._v(" "),s("p",[t._v("特点：")]),t._v(" "),s("ol",[s("li",[t._v('本地临时表：用户在创建表的时候添加了"#"前缀，其她点是根据数据库连接独立，只有创建本地临时表的数据库连接时才有权访问该表；')]),t._v(" "),s("li",[t._v("不同的数据连接中，创建的本地临时表虽然名字相同，但是这些表不存在任何关系。")]),t._v(" "),s("li",[t._v("真正的临时表利用了数据库临时空间，由数据库自动进行维护，因此节省了表空间。而且由于临时表一般利用虚拟内存，大大减少了硬盘的I/O次数，提高了系统效率。")]),t._v(" "),s("li",[t._v("临时表在事务完毕或会话完毕数据自动清空，不必记得用完后删除。")])]),t._v(" "),s("h4",{attrs:{id:"本地临时表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地临时表"}},[t._v("#")]),t._v(" 本地临时表")]),t._v(" "),s("p",[t._v("本地临时表名称以单个数字符号(#)打头；它们只对当前用户连接可见；当实例断开后删除。")]),t._v(" "),s("p",[t._v("数据库连接A：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#temp")]),t._v("\n{\n    id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    name nvarchar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    age "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n}\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可见")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#temp")]),t._v("\n")])])]),s("h3",{attrs:{id:"sql语句的优化问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql语句的优化问题"}},[t._v("#")]),t._v(" SQL语句的优化问题")]),t._v(" "),s("p",[t._v("​    1.select * from table1 where name = “wangji” and tid > 10000")]),t._v(" "),s("p",[t._v("​    2.select * from table1 where tid > 10000 and name = “wangji”")]),t._v(" "),s("p",[t._v("​    对于上面两条语句，分析感觉是有区别的。因为对于第一条，先查询出name为wangji的数据，然后再从这批数据查询出tid大于10000；而第二条，先查询出tid大于10000，然后再从这批数据查询出name为wangji的。")]),t._v(" "),s("p",[t._v("​    其实对于这种分析是错误的。因为对于数据库来说，判断sql语句的时候，会判断出where中查询的条件那个索引能够缩小表的扫描条数。也就是自动化判断优先级。")]),t._v(" "),s("p",[t._v("那么说对于sql的编写，哪些会造成全表搜索呢？（以下错误示范）")]),t._v(" "),s("ol",[s("li",[t._v("使用模糊查询like ：name like “%际”")]),t._v(" "),s("li",[t._v("使用or查询：name = “wangji” or age > 22")]),t._v(" "),s("li",[t._v("使用非操作符、函数引起的不满足扫描参数的：如：NOT、!=、<、>、!<、!>、NOT EXISTS、 NOT IN、NOT LIKE等，另外还有函数。例如：")])]),t._v(" "),s("p",[t._v("​      Name like “%际”")]),t._v(" "),s("p",[t._v("​       Abs < 5000")]),t._v(" "),s("p",[t._v("优化的注意：")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("尽量避免IN的作用相当于OR‘’")]),t._v(" "),s("li",[t._v("NOT也尽量避免")]),t._v(" "),s("li",[t._v("Exists和in的执行效率一样，也尽量避免使用")]),t._v(" "),s("li",[t._v("使用函数charindex()和上面使用通配符%的模糊查询Like执行效率一样")]),t._v(" "),s("li",[t._v("Union并不绝对比or执行效率高")]),t._v(" "),s("li",[t._v("需要查询多少字段内容就查询多少字段内容，避免使用*所有字段内容获取")]),t._v(" "),s("li",[t._v("Count(*)执行效率不会比count(字段名)慢")]),t._v(" "),s("li",[t._v("Order by按聚集索引字段排序效率是最高的")]),t._v(" "),s("li",[t._v("Top是高效：TOP 子句用于规定要返回的记录的数目。 select top 10 percent * from record --加“top 10 percent”表示查询的是数据表中前10%的数据,若将10改为20,则查询的就是前20%的数据.")]),t._v(" "),s("li",[t._v("尽量避免使用子查询 多去使用临时表")])])]),t._v(" "),s("h3",{attrs:{id:"如何处理海量数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何处理海量数据"}},[t._v("#")]),t._v(" 如何处理海量数据")]),t._v(" "),s("p",[t._v("海量数据1000W级别以上才算是海量数据")]),t._v(" "),s("p",[t._v("更新  删除   查询")]),t._v(" "),s("p",[t._v("一、SQL语句优化")]),t._v(" "),s("p",[t._v("二、存储过程")]),t._v(" "),s("p",[t._v("三、读写分离   主从同步，MSSQL MYSQL完整主从同步方案")]),t._v(" "),s("p",[t._v("四、大量使用临时表提高检索效率")]),t._v(" "),s("p",[t._v("五、使用缓存（WEB技术）")]),t._v(" "),s("p",[t._v("六、分库分表   多数情况下通过时间进行的")]),t._v(" "),s("p",[t._v("七、数据库集群")]),t._v(" "),s("h2",{attrs:{id:"非关系型数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非关系型数据库"}},[t._v("#")]),t._v(" 非关系型数据库")]),t._v(" "),s("h3",{attrs:{id:"认识redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认识redis"}},[t._v("#")]),t._v(" 认识Redis")]),t._v(" "),s("p",[t._v("文章简单介绍："),s("a",{attrs:{href:"https://mp.weixin.qq.com/s/uQBXEQnD8li5xbnazXHgOA",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://mp.weixin.qq.com/s/uQBXEQnD8li5xbnazXHgOA"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"nosql分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nosql分类"}},[t._v("#")]),t._v(" NoSQL分类")]),t._v(" "),s("h4",{attrs:{id:"什么是redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是redis"}},[t._v("#")]),t._v(" 什么是Redis")]),t._v(" "),s("h5",{attrs:{id:"redis简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis简介"}},[t._v("#")]),t._v(" Redis简介")]),t._v(" "),s("p",[t._v("是以key-value形式存储,和传统的关系型数据库不一样.不一定遵循传统数据库的一些基本要求.(非关系型的,分布式的,开源的,水平可拓展的)")]),t._v(" "),s("p",[t._v("优点:\n"),s("strong",[t._v("对数据高并发读写")]),t._v("(直接是内存中进行读写的)\n对海量数据的高效率存储和访问\n对数据的可拓展性和高可用性.\n"),s("strong",[t._v("单线程操作")]),t._v(",每个操作都是原子操作,没有并发相关问题(redis 6)")]),t._v(" "),s("p",[t._v("缺点:\nredis(ACID处理非常简单)\n无法做太复杂的关系数据库模型")]),t._v(" "),s("p",[t._v("redis在线入门 ： "),s("a",{attrs:{href:"http://try.redis.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://try.redis.io/"),s("OutboundLink")],1),t._v("\nredis 中文资料站： "),s("a",{attrs:{href:"http://www.redis.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.redis.cn/"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://www.runoob.com/redis/redis-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.runoob.com/redis/redis-tutorial.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("使用场景：")]),t._v(" "),s("p",[t._v("1.高并发，缓存；借助其读写速度快。")]),t._v(" "),s("p",[t._v("2.消息队列: 单线程  内存栈特点。")]),t._v(" "),s("h3",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("h4",{attrs:{id:"概况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概况"}},[t._v("#")]),t._v(" 概况")]),t._v(" "),s("p",[t._v("Redis支持的存储数据类型有很多：")]),t._v(" "),s("p",[t._v("常用："),s("strong",[t._v("string")]),t._v("（字符串），"),s("strong",[t._v("hash")]),t._v("（哈希），"),s("strong",[t._v("list")]),t._v("（列表），"),s("strong",[t._v("set")]),t._v("（集合）及"),s("strong",[t._v("zset")]),t._v("(sorted set：有序集合)")]),t._v(" "),s("p",[s("strong",[t._v("命令格式")])]),t._v(" "),s("p",[t._v("类型命令    key       参数数据")]),t._v(" "),s("p",[t._v("set           name    dafei")]),t._v(" "),s("p",[s("strong",[t._v("操作建议")])]),t._v(" "),s("p",[t._v("Redis操作有点是key-value形式存储数据")]),t._v(" "),s("p",[t._v("另外Redis中的key大部分为String类型，value值根据缓存数据结构可以选用：string，hash，list，set，zset等类型。")]),t._v(" "),s("p",[s("strong",[t._v("注意：下面讲的各种类型，表述的是缓存数据的value类型。")])]),t._v(" "),s("h4",{attrs:{id:"string类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string类型"}},[t._v("#")]),t._v(" String类型")]),t._v(" "),s("p",[t._v("String类型包含多种类型的特殊类型，并且是二进制安全的，其值可以是数值，可以是字符串，也可以是二进制数据。")]),t._v(" "),s("p",[t._v("在Redis内容数据存储结构：")]),t._v(" "),s("h5",{attrs:{id:"常用的命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用的命令"}},[t._v("#")]),t._v(" "),s("strong",[t._v("常用的命令")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令格式")]),t._v(" "),s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("案例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("set key value")]),t._v(" "),s("td",[t._v("将key-value缓存redis中")]),t._v(" "),s("td",[t._v("set name dafei")])]),t._v(" "),s("tr",[s("td",[t._v("get key")]),t._v(" "),s("td",[t._v("从redis中获取key对应value值")]),t._v(" "),s("td",[t._v("get name")])]),t._v(" "),s("tr",[s("td",[t._v("incr key")]),t._v(" "),s("td",[t._v("将key对应value值 + 1")]),t._v(" "),s("td",[t._v("incr age")])]),t._v(" "),s("tr",[s("td",[t._v("decr key")]),t._v(" "),s("td",[t._v("将key对应value值-1")]),t._v(" "),s("td",[t._v("decr age")])]),t._v(" "),s("tr",[s("td",[t._v("setex key seconds value")]),t._v(" "),s("td",[t._v("将key-value缓存到redis中，seconds 秒后失效")]),t._v(" "),s("td",[t._v("setex  sex  10  man")])]),t._v(" "),s("tr",[s("td",[t._v("ttl key")]),t._v(" "),s("td",[t._v("查看key存活时间")]),t._v(" "),s("td",[t._v("ttl sex")])]),t._v(" "),s("tr",[s("td",[t._v("del  key")]),t._v(" "),s("td",[t._v("从redis中删除key")]),t._v(" "),s("td",[t._v("del name")])]),t._v(" "),s("tr",[s("td",[t._v("setnx key value")]),t._v(" "),s("td",[t._v("如果key已经存，不做任何操作，如果key不存，直接添加")]),t._v(" "),s("td",[t._v("setnx  name xiaofei")])])])]),t._v(" "),s("h5",{attrs:{id:"非常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非常用命令"}},[t._v("#")]),t._v(" "),s("strong",[t._v("非常用命令")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令格式")]),t._v(" "),s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("案例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("incrby key increment")]),t._v(" "),s("td",[t._v("给key对应值加increment")]),t._v(" "),s("td",[t._v("incrby age 10")])]),t._v(" "),s("tr",[s("td",[t._v("mset k1 v1 k2 v2....")]),t._v(" "),s("td",[t._v("批量添加k1v1 k2v2 key value对")]),t._v(" "),s("td",[t._v("mset name dafei age 18")])]),t._v(" "),s("tr",[s("td",[t._v("mget k1  k2....")]),t._v(" "),s("td",[t._v("批量获取k1, k2的值")]),t._v(" "),s("td",[t._v("mget name  age")])]),t._v(" "),s("tr",[s("td",[t._v("append key  value")]),t._v(" "),s("td",[t._v("在key对应的value值中拼+value")]),t._v(" "),s("td",[t._v("append name yes")])]),t._v(" "),s("tr",[s("td",[t._v("setrange key  offset  value")]),t._v(" "),s("td",[t._v("修改key对应的value值,替换为指定value,冲offset索引位置开始")]),t._v(" "),s("td",[t._v("setrange name 2   xx")])])])]),t._v(" "),s("h5",{attrs:{id:"应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),s("p",[t._v("1>计数器")]),t._v(" "),s("p",[t._v("如：视频播放数系统就是使用redis作为视频播放数计数的基础组件。")]),t._v(" "),s("p",[s("strong",[t._v("incr  viewnum 1")])]),t._v(" "),s("p",[t._v("2>共享session")]),t._v(" "),s("p",[t._v("出于负载均衡的考虑，分布式服务会将用户信息的访问均衡到不同服务器上，用户刷新一次访问可能会需要重新登录，为避免这个问题可以用redis将用户session集中管理，  在这种模式下只要保证redis的高可用和扩展性的，每次获取用户更新或查询登录信息都直接从redis中集中获取。")]),t._v(" "),s("p",[s("strong",[t._v('user_login_info:uid----\x3e{"id":1, "name":"dafei", "age":18}')])]),t._v(" "),s("h4",{attrs:{id:"hash类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash类型"}},[t._v("#")]),t._v(" Hash类型")]),t._v(" "),s("p",[t._v("Hash类型是String类型的field和value的映射表，或者说是一个String集合。它特别适合存储对象，相比较而言，将一个对象存储在Hash类型里要比存储在String类型里占用更少的内存空间。")]),t._v(" "),s("h5",{attrs:{id:"常用的命令-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用的命令-2"}},[t._v("#")]),t._v(" 常用的命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令格式")]),t._v(" "),s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("案例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("hset key field  value")]),t._v(" "),s("td",[t._v("将field  value对缓存到redis中hash中，键值为key")]),t._v(" "),s("td",[t._v("hset user name dafei")])]),t._v(" "),s("tr",[s("td",[t._v("hget key field")]),t._v(" "),s("td",[t._v("从key对应hash列表中获取field字段")]),t._v(" "),s("td",[t._v("hget user  name")])]),t._v(" "),s("tr",[s("td",[t._v("hexists key  field")]),t._v(" "),s("td",[t._v("判断key对应的hash列表是否存在 field字段")]),t._v(" "),s("td",[t._v("hexists user age")])]),t._v(" "),s("tr",[s("td",[t._v("hdel key  field")]),t._v(" "),s("td",[t._v("删除key对应hash列表中field字段")]),t._v(" "),s("td",[t._v("hdel user age")])]),t._v(" "),s("tr",[s("td",[t._v("hincrby  key  field  increment")]),t._v(" "),s("td",[t._v("给key对应hash列表中field字段 + increment")]),t._v(" "),s("td",[t._v("hincrby user  age 10")])]),t._v(" "),s("tr",[s("td",[t._v("hlen key")]),t._v(" "),s("td",[t._v("查看key对应的hash列表field的数量")]),t._v(" "),s("td",[t._v("hlen user")])]),t._v(" "),s("tr",[s("td",[t._v("hkeys  key")]),t._v(" "),s("td",[t._v("获取key对应的hash列表所有的field值")]),t._v(" "),s("td",[t._v("hkeys  user")])]),t._v(" "),s("tr",[s("td",[t._v("hvals  key")]),t._v(" "),s("td",[t._v("获取key对应的hash列表所有的field对应的value值")]),t._v(" "),s("td",[t._v("kvals  user")])]),t._v(" "),s("tr",[s("td",[t._v("hgetall key")]),t._v(" "),s("td",[t._v("获取key对应的hash列表中所有的field及其对应的value值")]),t._v(" "),s("td",[t._v("hgetall user")])])])]),t._v(" "),s("h5",{attrs:{id:"应用场景-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-2"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),s("p",[t._v("Hash结构相对于字符串序列化缓存信息更加直观，并且在更新操作上更加便捷。")]),t._v(" "),s("p",[s("strong",[t._v("共享session设计")])]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" userame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("登录用户：")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dafei"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"666"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("登录缓存：")]),t._v(" "),s("p",[t._v("key："),s("strong",[t._v("user_token")]),t._v("                value："),s("strong",[t._v('new User("dafei", "666", 18)')])]),t._v(" "),s("p",[t._v("----------------------------------------------------------------------------------------------")]),t._v(" "),s("p",[t._v("方案1： 将user对象转换json格式字符串存redis  【侧重于查， 改非常麻烦】")]),t._v(" "),s("p",[t._v("key                            value")]),t._v(" "),s("p",[t._v("---------------------------------------------------------------------------------------------")]),t._v(" "),s("p",[s("strong",[t._v("user_token")]),t._v("   ：   "),s("strong",[t._v('"{name:dafei, age:18, password:666}"')])]),t._v(" "),s("p",[t._v("方案2： 将user对象转换hash对象存redis【侧重于改，查询相对麻烦】")]),t._v(" "),s("p",[t._v("key                            value")]),t._v(" "),s("p",[t._v("---------------------------------------------------------------------------------------------")]),t._v(" "),s("p",[s("strong",[t._v("user_token")]),t._v("   ：  "),s("strong",[t._v("{")])]),t._v(" "),s("p",[t._v("​                                    "),s("strong",[t._v("name：ddafei")])]),t._v(" "),s("p",[t._v("​                                    "),s("strong",[t._v("age ：    18")])]),t._v(" "),s("p",[t._v("​                                    "),s("strong",[t._v("password： 666")])]),t._v(" "),s("p",[t._v("​                                 "),s("strong",[t._v("}")])]),t._v(" "),s("h4",{attrs:{id:"list类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list类型"}},[t._v("#")]),t._v(" List类型")]),t._v(" "),s("p",[t._v("Redis中的List类似C#中的Queue,也可以当做List来用.")]),t._v(" "),s("p",[t._v("List类型是一个链表结构的集合，其主要功能有push、pop、获取元素等，更详细的说,List类型是一个双端链表的结构，我们可以通过相关操作进行集合的头部或者尾部添加删除元素，List的设计非常简单精巧，即可以作为栈,又可以作为队列，满足绝大多数需求.")]),t._v(" "),s("p",[t._v("类似Java中："),s("strong",[t._v("Map<String, List>  map")])]),t._v(" "),s("h5",{attrs:{id:"常用的命令-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用的命令-3"}},[t._v("#")]),t._v(" "),s("strong",[t._v("常用的命令")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令格式")]),t._v(" "),s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("案例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("rpush  key  value")]),t._v(" "),s("td",[t._v("从右边往key集合中添加value值")]),t._v(" "),s("td",[t._v("rpush hobby java")])]),t._v(" "),s("tr",[s("td",[t._v("lrange key start stop")]),t._v(" "),s("td",[t._v("从左边开始列表key集合，从start位置开始，stop位置结束")]),t._v(" "),s("td",[t._v("lrange hobby 0 -1")])]),t._v(" "),s("tr",[s("td",[t._v("lpush key value")]),t._v(" "),s("td",[t._v("从左边往key集合中添加value值")]),t._v(" "),s("td",[t._v("lpush hobby c++")])]),t._v(" "),s("tr",[s("td",[t._v("lpop key")]),t._v(" "),s("td",[t._v("弹出key集合中最左边的数据")]),t._v(" "),s("td",[t._v("lpop hobby")])]),t._v(" "),s("tr",[s("td",[t._v("rpop key")]),t._v(" "),s("td",[t._v("弹出key集合中最右边的数据")]),t._v(" "),s("td",[t._v("rpop hobby")])]),t._v(" "),s("tr",[s("td",[t._v("llen key")]),t._v(" "),s("td",[t._v("获取列表长度")]),t._v(" "),s("td",[t._v("llen hooby")])])])]),t._v(" "),s("h5",{attrs:{id:"非常用命令-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非常用命令-2"}},[t._v("#")]),t._v(" "),s("strong",[t._v("非常用命令")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令格式")]),t._v(" "),s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("案例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("linsert key before pivot value")]),t._v(" "),s("td",[t._v("操作key集合，在pivot值之前插入value")]),t._v(" "),s("td",[t._v("linsert hobby before java  c#")])]),t._v(" "),s("tr",[s("td",[t._v("linsert key  after  pivot value")]),t._v(" "),s("td",[t._v("操作key集合，在pivot值之后插入value")]),t._v(" "),s("td",[t._v("linsert hobby after  java  c#")])]),t._v(" "),s("tr",[s("td",[t._v("lset key  index  value")]),t._v(" "),s("td",[t._v("操作key集合，更新索引index位置值为value")]),t._v(" "),s("td",[t._v("lset hobby 1  go")])]),t._v(" "),s("tr",[s("td",[t._v("lrem key count  value")]),t._v(" "),s("td",[t._v("操作key集合，删除 count个 value值")]),t._v(" "),s("td",[t._v("lrem hobby 3   go")])]),t._v(" "),s("tr",[s("td",[t._v("ltrim   key  start stop")]),t._v(" "),s("td",[t._v("操作key集合，从start到stop截取自列表")]),t._v(" "),s("td",[t._v("ltrim  hobby 2   4")])]),t._v(" "),s("tr",[s("td",[t._v("lindex  key  index")]),t._v(" "),s("td",[t._v("操作key集合，获取索引为index位置的数据")]),t._v(" "),s("td",[t._v("lindex  hobby 1")])])])]),t._v(" "),s("h5",{attrs:{id:"应用场景-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-3"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),s("p",[t._v("1>用户收藏文章列表：")]),t._v(" "),s("p",[t._v("key：user_favor_article_list")]),t._v(" "),s("p",[t._v("value: [aid1, aid2, aid3......]")]),t._v(" "),s("h4",{attrs:{id:"set类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set类型"}},[t._v("#")]),t._v(" Set类型")]),t._v(" "),s("p",[t._v("Set集合是String类型的无序集合,set是通过HashTable实现的，对集合我们可以取**交集、并集、差集。")]),t._v(" "),s("h5",{attrs:{id:"常用的命令-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用的命令-4"}},[t._v("#")]),t._v(" "),s("strong",[t._v("常用的命令")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令格式")]),t._v(" "),s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("案例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("sadd key  members [....]")]),t._v(" "),s("td",[t._v("往key 集合中添加member元素")]),t._v(" "),s("td",[t._v("sadd myset a  b  c")])]),t._v(" "),s("tr",[s("td",[t._v("smembers key")]),t._v(" "),s("td",[t._v("遍历key集合中所有的元素")]),t._v(" "),s("td",[t._v("smembers myset")])]),t._v(" "),s("tr",[s("td",[t._v("srem  key members [....]")]),t._v(" "),s("td",[t._v("删除key集合中members元素")]),t._v(" "),s("td",[t._v("srem myset a")])]),t._v(" "),s("tr",[s("td",[t._v("spop key count")]),t._v(" "),s("td",[t._v("从key集合中随机弹出count个元素")]),t._v(" "),s("td",[t._v("spop myset 1")])])])]),t._v(" "),s("h5",{attrs:{id:"非常用命令-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非常用命令-3"}},[t._v("#")]),t._v(" "),s("strong",[t._v("非常用命令")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令格式")]),t._v(" "),s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("案例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("sdiff key1   key2")])]),t._v(" "),s("td",[s("strong",[t._v("返回key1中特有的元素(差集)")])]),t._v(" "),s("td",[s("strong",[t._v("sdiff key1 key2")])])]),t._v(" "),s("tr",[s("td",[t._v("sidiffstore  dest  key1 key2")]),t._v(" "),s("td",[t._v("返回key1中特有的元素，并将返回值缓存到dest集合中")]),t._v(" "),s("td",[t._v("sidiffstore  dest  key1 key2")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("sinter key1 key2")])]),t._v(" "),s("td",[s("strong",[t._v("返回key1跟key2集合的交集")])]),t._v(" "),s("td",[s("strong",[t._v("sinter key1 key2")])])]),t._v(" "),s("tr",[s("td",[t._v("sinterstore  dest key1 key2")]),t._v(" "),s("td",[t._v("返回key1跟key2集合的交集，并将返回值缓存到dest集合中")]),t._v(" "),s("td",[t._v("sinterstore  dest key1 key2")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("sunion key1  key2")])]),t._v(" "),s("td",[s("strong",[t._v("返回key1跟key2集合的并集")])]),t._v(" "),s("td",[s("strong",[t._v("sunion key1  key2")])])]),t._v(" "),s("tr",[s("td",[t._v("sunionstore dest key1  key2")]),t._v(" "),s("td",[t._v("返回key1跟key2集合的并集，并将返回值缓存到dest集合中")]),t._v(" "),s("td",[t._v("sunionstore dest key1  key2")])]),t._v(" "),s("tr",[s("td",[t._v("smove source destination member")]),t._v(" "),s("td",[t._v("将source集合中member元素移动到destination集合中")]),t._v(" "),s("td",[t._v("smove key1  key2 aa")])]),t._v(" "),s("tr",[s("td",[t._v("sismember key member")]),t._v(" "),s("td",[t._v("判断member元素是否在key集合中")]),t._v(" "),s("td",[t._v("sismember key1   aa")])]),t._v(" "),s("tr",[s("td",[t._v("srandmember  key  count")]),t._v(" "),s("td",[t._v("随机获取set集合中count 个元素")]),t._v(" "),s("td",[t._v("srandmember key1 1")])])])]),t._v(" "),s("h5",{attrs:{id:"应用场景-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-4"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),s("p",[t._v("1，去重；")]),t._v(" "),s("p",[t._v("2，抽奖;")]),t._v(" "),s("p",[t._v("​           1：准备一个抽奖池:sadd luckydraw 1 2 3 4 5 6 7 8 9 10 11 12 13")]),t._v(" "),s("p",[t._v("​           2：抽3个三等奖:spop luckydraw 3")]),t._v(" "),s("p",[t._v("​           3：抽2个二等奖:spop luckydraw 2")]),t._v(" "),s("p",[t._v("​     4：抽1个:一等奖:spop luckydraw 1")]),t._v(" "),s("h4",{attrs:{id:"sorted-set-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sorted-set-类型"}},[t._v("#")]),t._v(" Sorted set 类型")]),t._v(" "),s("p",[t._v("Sorted set 也称Zset类型，是一种具有排序效果的set集合。它跟set集合一样也是 string 类型元素的集合，且不允许重复的成员。并且要求每个元素都会关联一个double 类型的分数。后续可以通过分数来为集合中的成员进行从小到大的排序。")]),t._v(" "),s("p",[t._v("Sorted set集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。 集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。")]),t._v(" "),s("p",[t._v("数据缓存结构：")]),t._v(" "),s("h5",{attrs:{id:"常用的命令-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用的命令-5"}},[t._v("#")]),t._v(" "),s("strong",[t._v("常用的命令")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令格式")]),t._v(" "),s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("案例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("zadd key score member")]),t._v(" "),s("td",[t._v("往key集合中添加member元素，分数为score")]),t._v(" "),s("td",[t._v("zadd players 100  a")])]),t._v(" "),s("tr",[s("td",[t._v("zincrby  key increment  member")]),t._v(" "),s("td",[t._v("将key集合中的member元素 分数 + increment")]),t._v(" "),s("td",[t._v("zadd players 100  a")])]),t._v(" "),s("tr",[s("td",[t._v("zrange  key  start  stop [withscores]")]),t._v(" "),s("td",[t._v("将key集合中的元素按分数升序排列 [显式分数]")]),t._v(" "),s("td",[t._v("zrange players 0 -1  withscores")])]),t._v(" "),s("tr",[s("td",[t._v("zrevrange key  start  stop [withscores]")]),t._v(" "),s("td",[t._v("将key集合中的元素按分数降序排列 [显式分数]")]),t._v(" "),s("td",[t._v("zrevrange players 0 -1  withscores")])]),t._v(" "),s("tr",[s("td",[t._v("zrank  key  member")]),t._v(" "),s("td",[t._v("返回member元素在key结合中的正序排名")]),t._v(" "),s("td",[t._v("zrank players  a")])]),t._v(" "),s("tr",[s("td",[t._v("zrevrank key  member")]),t._v(" "),s("td",[t._v("返回member元素在key结合中的倒序排名")]),t._v(" "),s("td",[t._v("zrevrank players  a")])]),t._v(" "),s("tr",[s("td",[t._v("zcard  key")]),t._v(" "),s("td",[t._v("返回key集合元素个数")]),t._v(" "),s("td",[t._v("zcard  players")])])])]),t._v(" "),s("h5",{attrs:{id:"非常用命令-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非常用命令-4"}},[t._v("#")]),t._v(" "),s("strong",[t._v("非常用命令")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令格式")]),t._v(" "),s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("案例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("zrangebyscore  key  min  max  [withscores]")]),t._v(" "),s("td",[t._v("按[min, max) 分数范围返回key集合中元素(正序)")]),t._v(" "),s("td",[t._v("zrangebyscore players  200 300  withscores")])]),t._v(" "),s("tr",[s("td",[t._v("zrevrangebyscore key  min  max  [withscores]")]),t._v(" "),s("td",[t._v("按[min, max) 分数范围返回key集合中元素(倒序)")]),t._v(" "),s("td",[t._v("zrevrangebyscore players  200 300  withscores")])]),t._v(" "),s("tr",[s("td",[t._v("zrem key member")]),t._v(" "),s("td",[t._v("删除key集合中member元素与分数")]),t._v(" "),s("td",[t._v("zrem players  a")])]),t._v(" "),s("tr",[s("td",[t._v("zremrangebyscore  key min max  withscores")]),t._v(" "),s("td",[t._v("按[min, max) 分数范围删除key集合中元素")]),t._v(" "),s("td",[t._v("zremrangebyscore  players  200 300  withscores")])]),t._v(" "),s("tr",[s("td",[t._v("zremrangebyrank  key start  stop")]),t._v(" "),s("td",[t._v("删除key集合正序排名落在[start, stop) 范围元素")]),t._v(" "),s("td",[t._v("zremrangebyrank  players  10  20")])]),t._v(" "),s("tr",[s("td",[t._v("zcount key min max")]),t._v(" "),s("td",[t._v("按照分数范围[min, max]统计key集合中元素个数")]),t._v(" "),s("td",[t._v("zcount  players  100 300")])])])]),t._v(" "),s("h5",{attrs:{id:"应用场景-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-5"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),s("p",[t._v("排行榜：有序集合经典使用场景。例如视频网站需要对用户上传的视频做排行榜，榜单维护可能是多方面：按照时间、按照播放量、按照获得的赞数等。")]),t._v(" "),s("h4",{attrs:{id:"类型总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型总结"}},[t._v("#")]),t._v(" 类型总结")]),t._v(" "),s("p",[t._v("一个问题，Redis在项目中如何使用？")]),t._v(" "),s("p",[t._v("思考点：")]),t._v(" "),s("p",[t._v("1>项目是否需要使用到缓存？使用")]),t._v(" "),s("p",[t._v("2>使用缓存是否选用Redis？选用")]),t._v(" "),s("p",[t._v("3>使用Redis那该怎么设计Key-Value值？")]),t._v(" "),s("h5",{attrs:{id:"value设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#value设计"}},[t._v("#")]),t._v(" Value设计")]),t._v(" "),s("p",[t._v("先说value值的设计其实就是value类型选用： String， Hash， List， Set， Sort Set")]),t._v(" "),s("p",[t._v("一般考虑：")]),t._v(" "),s("ul",[s("li",[t._v("是否需要排序？要使用Sort Set")]),t._v(" "),s("li",[t._v("缓存的数据是多个值还是单个值，")]),t._v(" "),s("li",[t._v("多个值：允许重复选List  不允许重复选择Set")]),t._v(" "),s("li",[t._v("单个值：简单值选择String， 对象值选择Hash")])]),t._v(" "),s("p",[t._v("操作方式：")]),t._v(" "),s("p",[t._v("所有value之后都转换成json格式字符串，然后缓存到Redis，原因：操作方便，减少泛型操作麻烦")]),t._v(" "),s("p",[t._v("不管存放啥数据类型，从reds中获取出来都是Object类型，后续对象强制转换麻烦，干脆直接使用字符串。")]),t._v(" "),s("h5",{attrs:{id:"key设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key设计"}},[t._v("#")]),t._v(" Key设计")]),t._v(" "),s("p",[t._v("Redis 的key 设计讲究4个性：")]),t._v(" "),s("h6",{attrs:{id:"唯一性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#唯一性"}},[t._v("#")]),t._v(" "),s("strong",[t._v("唯一性")])]),t._v(" "),s("p",[t._v("Redis 类似Map集合，key必须保证唯一，缓存同一个key时，后者会覆盖前者，所有必须要求唯一，那如何保证唯一呢？")]),t._v(" "),s("p",[t._v("最常用的方式："),s("strong",[t._v("使用缓存数据的主键作为key")]),t._v("。")]),t._v(" "),s("p",[t._v("比如：缓存员工信息")]),t._v(" "),s("p",[t._v("key                             value")]),t._v(" "),s("p",[t._v("----------------------------------------------------------------")]),t._v(" "),s("p",[t._v("1                 员工1")]),t._v(" "),s("p",[t._v("2                 员工2")]),t._v(" "),s("p",[t._v("其中的1， 2 是员工的id")]),t._v(" "),s("h6",{attrs:{id:"可读性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可读性"}},[t._v("#")]),t._v(" "),s("strong",[t._v("可读性")])]),t._v(" "),s("p",[t._v("可读性是保证Redis的key能做到见名知意，上面的员工id1， 员工id2 虽说能保证key唯一，但可读性非常差，维护key时，无法从， 1， 2中快速判断该key对应value值。所以一一般在保证key唯一的前提下，给key加上前缀：")]),t._v(" "),s("p",[t._v("key                                       value")]),t._v(" "),s("p",[t._v("----------------------------------------------------------------")]),t._v(" "),s("p",[t._v("employee_info:id1            员工1")]),t._v(" "),s("p",[t._v("employee_info:id2            员工2")]),t._v(" "),s("p",[t._v("employee_info:id1     employee_info:id2  这样子设计key，可读性就好多了。")]),t._v(" "),s("p",[t._v("可读性前缀的设计规范千奇百怪，我个人比较推崇的：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("普通单值")]),t._v(" "),s("p",[t._v("key                                       value")]),t._v(" "),s("p",[t._v("----------------------------------------------------------------")]),t._v(" "),s("p",[t._v("employe_info:id1              员工对象信息")])]),t._v(" "),s("li",[s("p",[t._v("类似关系型数据库设计")]),t._v(" "),s("p",[s("strong",[t._v("表名:主键名:主键值:列名")])]),t._v(" "),s("p",[t._v("key                                       value")]),t._v(" "),s("p",[t._v("----------------------------------------------------------------")]),t._v(" "),s("p",[t._v("employee : id : 1:info        员工对象信息")])]),t._v(" "),s("li",[s("p",[t._v("通用玩法")]),t._v(" "),s("p",[s("strong",[t._v("业务模块名:业务逻辑含义:其他:value类型")])]),t._v(" "),s("p",[t._v("key                                                        value")]),t._v(" "),s("p",[t._v("-----------------------------------------------------------------------")]),t._v(" "),s("p",[t._v("employee :base.info:id1:hash         员工对象信息")]),t._v(" "),s("p",[s("strong",[t._v("业务模块名")]),t._v("：表示该key属于哪个功能模块")]),t._v(" "),s("p",[s("strong",[t._v("业务逻辑含义段")]),t._v("：这里可以使用  "),s("strong",[t._v(".")]),t._v("  分开， 具体业务逻辑表示")]),t._v(" "),s("p",[t._v("​ 比如：缓存员工权限")]),t._v(" "),s("p",[t._v("​    employee:auth.permission:id1:set     员工权限集合")]),t._v(" "),s("p",[s("strong",[t._v("其他")]),t._v("：一般设置唯一标识，比如主键")]),t._v(" "),s("p",[s("strong",[t._v("value类型")]),t._v("：key对应value类型值，提高可读性。")])])]),t._v(" "),s("h3",{attrs:{id:"redis全局命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis全局命令"}},[t._v("#")]),t._v(" Redis全局命令")]),t._v(" "),s("p",[t._v("全局命令针对的是所有的key，大部分用来做运维，做管理的")]),t._v(" "),s("p",[t._v("常用的全局key")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令格式")]),t._v(" "),s("th",[t._v("功能")]),t._v(" "),s("th",[t._v("案例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("keys  pattern")]),t._v(" "),s("td",[t._v("按照pattern 匹配规则，列表redis中所有的key")]),t._v(" "),s("td",[t._v("keys xxx:*")])]),t._v(" "),s("tr",[s("td",[t._v("exists  key")]),t._v(" "),s("td",[t._v("判断key是否存在")]),t._v(" "),s("td",[t._v("exists name")])]),t._v(" "),s("tr",[s("td",[t._v("expire key  seconds")]),t._v(" "),s("td",[t._v("给key设置过期时间，超时：seconds")]),t._v(" "),s("td",[t._v("expire name 10")])]),t._v(" "),s("tr",[s("td",[t._v("persist key")]),t._v(" "),s("td",[t._v("取消key过期时间")]),t._v(" "),s("td",[t._v("persist  name")])]),t._v(" "),s("tr",[s("td",[t._v("select  index")]),t._v(" "),s("td",[t._v("切换数据库，默认是第0个，共有【0,15】个")]),t._v(" "),s("td",[t._v("select 0")])]),t._v(" "),s("tr",[s("td",[t._v("move key   db")]),t._v(" "),s("td",[t._v("从当前数据库将key移动到指定db库")]),t._v(" "),s("td",[t._v("move name 1")])]),t._v(" "),s("tr",[s("td",[t._v("randomkey")]),t._v(" "),s("td",[t._v("随机返回一个key")]),t._v(" "),s("td",[t._v("randomkey")])]),t._v(" "),s("tr",[s("td",[t._v("rename key newkey")]),t._v(" "),s("td",[t._v("将key改名为newkey")]),t._v(" "),s("td",[t._v("rename name  newname")])]),t._v(" "),s("tr",[s("td",[t._v("echo message")]),t._v(" "),s("td",[t._v("打印message信息")]),t._v(" "),s("td",[t._v("echo  message")])]),t._v(" "),s("tr",[s("td",[t._v("dbsize")]),t._v(" "),s("td",[t._v("查看key个数")]),t._v(" "),s("td",[t._v("dbsize")])]),t._v(" "),s("tr",[s("td",[t._v("info")]),t._v(" "),s("td",[t._v("查看redis数据库信息")]),t._v(" "),s("td",[t._v("info")])]),t._v(" "),s("tr",[s("td",[t._v("config get  *")]),t._v(" "),s("td",[t._v("查看所有redis配置信息")]),t._v(" "),s("td",[t._v("config get *")])]),t._v(" "),s("tr",[s("td",[t._v("flushdb")]),t._v(" "),s("td",[t._v("清空当前数据库")]),t._v(" "),s("td",[t._v("flushdb")])]),t._v(" "),s("tr",[s("td",[t._v("flushall")]),t._v(" "),s("td",[t._v("清空所有数据库")]),t._v(" "),s("td",[t._v("flushall")])])])]),t._v(" "),s("h3",{attrs:{id:"redis安全性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis安全性"}},[t._v("#")]),t._v(" Redis安全性")]),t._v(" "),s("p",[t._v("因为Redis速度非常快，所以在一台比较好的服务器下,一个外部用户在一秒内可以进行15w次的密码尝试，这意味你需要设定非常强大的密码来方式暴力破解。此时就需要对Redis进行密码设置啦。")]),t._v(" "),s("p",[s("strong",[t._v("Linux系统")])]),t._v(" "),s("p",[t._v("编辑 redis.conf文件，找到下面进行保存修改\n"),s("strong",[t._v("requirepass 自定义密码")])]),t._v(" "),s("p",[t._v("重启Redis服务，访问时，使用带密码的命令：")]),t._v(" "),s("p",[s("strong",[t._v("redis-cli -a 自定义密码")])]),t._v(" "),s("p",[t._v("否则会提示： (error)NOAUTH Authentication required.")]),t._v(" "),s("p",[t._v("Window系统")]),t._v(" "),s("p",[t._v("跟Linux系统一样，区别是，window系统的文件是")]),t._v(" "),s("p",[s("strong",[t._v("redis.window-service.config")])]),t._v(" "),s("h3",{attrs:{id:"redis的作用-重点理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis的作用-重点理解"}},[t._v("#")]),t._v(" "),s("strong",[t._v("Redis的作用[重点理解]")])]),t._v(" "),s("p",[t._v("1.缓存：作为内存数据库，Redis 可以用作缓存层来提高读取频繁的数据访问性能。将经常访问的数据存储在 Redis 中，可以避免频繁地从磁盘或数据库中读取数据，提高系统的响应速度。")]),t._v(" "),s("p",[t._v("2.分布式锁：Redis 提供了原子性操作和分布式特性，可以利用这些特性实现分布式锁。通过 Redis 的 SETNX（SET if Not eXists）命令或 RedLock 算法等机制，可以实现多个进程或服务器之间的协调和互斥，确保共享资源的一致性和安全性。")]),t._v(" "),s("p",[t._v("3.队列和消息代理：Redis 的列表（List）数据结构可以用作队列的实现，通过将任务或消息放入列表，消费者可以按照顺序获取并处理队列中的元素。此外，Redis 的发布-订阅（Pub/Sub）功能也可以用作简单的消息代理，用于消息的发布和订阅、事件驱动等场景。")]),t._v(" "),s("p",[t._v("4.计数器和统计：Redis 支持原子递增（INCR）和递减（DECR）操作，可以用来实现计数器功能，例如网站的文章浏览量统计、用户点赞数等。")]),t._v(" "),s("p",[t._v("5.分布式会话存储：将会话（Session）数据存储在 Redis 中，实现多个应用服务器之间的会话共享，可以提高系统的可扩展性和灵活性。")]),t._v(" "),s("h3",{attrs:{id:"redis事务-拓展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis事务-拓展"}},[t._v("#")]),t._v(" Redis事务[拓展]")]),t._v(" "),s("p",[t._v("一个事务从开始到执行会经历以下三个阶段：")]),t._v(" "),s("ul",[s("li",[t._v("开始事务。")]),t._v(" "),s("li",[t._v("命令入队。")]),t._v(" "),s("li",[t._v("执行事务。")])]),t._v(" "),s("p",[t._v("借用：菜鸟教程中例子")]),t._v(" "),s("p",[t._v("它先以 "),s("strong",[t._v("MULTI")]),t._v(" 开始一个事务， 然后将多个命令入队到事务中， 最后由 "),s("strong",[t._v("EXEC")]),t._v(" 命令触发事务， 一并执行事务中的所有命令：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("redis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" MULTI\nOK\n\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" SET book-name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mastering C++ in 21 days"')]),t._v("\nQUEUED\n\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" GET book-name\nQUEUED\n\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" SADD tag "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C++"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Programming"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mastering Series"')]),t._v("\nQUEUED\n\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" SMEMBERS tag\nQUEUED\n\nredis "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" EXEC\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" OK\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mastering C++ in 21 days"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mastering Series"')]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C++"')]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Programming"')]),t._v("\n")])])]),s("p",[t._v("单个 Redis 命令的执行是原子性的，但 Redis 没有在事务上增加任何维持原子性的机制，所以 Redis 事务的执行并不是原子性的。")]),t._v(" "),s("p",[t._v("Redis事务可以理解为一个"),s("strong",[t._v("打包的批量执行脚本")]),t._v("，但批量指令并非原子化的操作，中间某条指令的失败不会导致前面已做指令的回滚，也不会造成后续的指令不做。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" multi\nOK\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" name dafei\nQUEUED\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\nQUEUED\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" incr age \nQUEUED\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" incr name\nQUEUED\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" get age\nQUEUED\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" get name\nQUEUED\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6379"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" OK\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" OK\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ERR value is not an integer or out of range\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"19"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dafei"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" \n")])])]),s("p",[t._v("Redis 事务可以一次执行多个命令， 并且带有以下三个重要的保证：")]),t._v(" "),s("ul",[s("li",[t._v("批量操作在发送 EXEC 命令前被放入队列缓存。")]),t._v(" "),s("li",[t._v("收到 EXEC 命令后进入事务执行，事务中任意命令执行失败，其余的命令依然被执行。")]),t._v(" "),s("li",[t._v("在事务执行过程，其他客户端提交的命令请求不会插入到事务执行命令序列中。")])]),t._v(" "),s("h3",{attrs:{id:"redis持久化机制-拓展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis持久化机制-拓展"}},[t._v("#")]),t._v(" Redis持久化机制[拓展]")]),t._v(" "),s("h4",{attrs:{id:"引言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[t._v("#")]),t._v(" 引言")]),t._v(" "),s("p",[t._v("先来一个小实验，大家可以一起实现一下")]),t._v(" "),s("p",[t._v("步骤1：在Redis中添加2个key-value对")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" aa aa\nOK\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" bb bb\nOK\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" keys *\n")])])]),s("p",[t._v("步骤2：重启Redis 服务器，在执行keys * 观察数据")]),t._v(" "),s("p",[t._v("步骤3：分析结果")]),t._v(" "),s("p",[t._v("会出现一下几种结果：")]),t._v(" "),s("ul",[s("li",[t._v("之前的key在，aa  bb 都在（最理想的结果）")]),t._v(" "),s("li",[t._v("之前的key在，aa也在，bb不见了")]),t._v(" "),s("li",[t._v("之前的key在，aa， bb 不在")]),t._v(" "),s("li",[t._v("之前的key， aa， bb 都不在了（最坏的结果）")])]),t._v(" "),s("p",[t._v("思考：")]),t._v(" "),s("p",[t._v("为啥会这样？以我们对内存的操作理解，按道理重启之后数据应该全丢失了，为啥Redis 可能丢失，也可能不丢失，为何？")]),t._v(" "),s("p",[t._v("这里就涉及到Redis的持久化机制了。")]),t._v(" "),s("p",[t._v("Redis持久化机制目前以后3种，分别为：")]),t._v(" "),s("p",[t._v("1>"),s("strong",[t._v("快照方式")]),t._v("（RDB, Redis DataBase）")]),t._v(" "),s("p",[t._v("2>"),s("strong",[t._v("文件追加方式")]),t._v("（AOF, Append Only File）")]),t._v(" "),s("p",[t._v("3>"),s("strong",[t._v("混合持久化方式")]),t._v("（Redis4版本之后）")]),t._v(" "),s("h4",{attrs:{id:"rdb方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rdb方式"}},[t._v("#")]),t._v(" RDB方式")]),t._v(" "),s("p",[t._v("Snapshotting(快照)默认方式，将内存数据中以快照的方式写入到二进制文件中，默认为dump.rdb。触发RDB持久化过程分手动触发与自动触发。")]),t._v(" "),s("h5",{attrs:{id:"触发机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#触发机制"}},[t._v("#")]),t._v(" 触发机制")]),t._v(" "),s("p",[s("strong",[t._v("手动触发")])]),t._v(" "),s("p",[t._v("使用save命令：会阻塞当前Redis服务器，知道RDB过程完成为主，如果内存数据较多，会造成长时间阻塞，影响其他命令的使用，不建议轻易使用")]),t._v(" "),s("p",[t._v("使用bgsave命令：Redis进程执行fork指令创建子进程，由子进程实现RDB持久化，有需要时建议使用bgsave命令。")]),t._v(" "),s("p",[s("strong",[t._v("自动触发")])]),t._v(" "),s("p",[t._v("使用save相关配置，格式： save m n      表示m秒内数据集存在n次修改时会自动触发bgsave命令。")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("save")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("900")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#900秒内如果超过1个Key被修改则发起快照保存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("save")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#300秒内如果超过10个key被修改,则发起快照保存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("save")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("\n")])])]),s("h5",{attrs:{id:"优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("RDB快照文件是一个紧凑压缩的二进制文件，非常使用用于备份，全量复制等场景。开发中可以按照每6小时执行一次bgsave备份，用于容灾备份。")])]),t._v(" "),s("li",[s("p",[t._v("Redis加载RDB恢复数据远远快于AOF方式")])])]),t._v(" "),s("h5",{attrs:{id:"缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("ul",[s("li",[t._v("RDB无法做到实时持久化/秒级持久化，每次bgsave时都需要fork子进程，频繁执行有时间成本。")]),t._v(" "),s("li",[t._v("RDB快照文件不同版本格式不一样，容易引起兼容问题。")])]),t._v(" "),s("h4",{attrs:{id:"aof方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aof方式"}},[t._v("#")]),t._v(" AOF方式")]),t._v(" "),s("p",[t._v("AOF与RDB不一样，它是一独立日志的方式记录每次写命令，重启时再重新执行AOF文件中命令达到恢复数据的目的。解决了数据持久化的实时性的问题。")]),t._v(" "),s("p",[t._v("Redis默认是不开启的，需要使用时，需要配置： "),s("strong",[t._v("appendonly yes")])]),t._v(" "),s("p",[t._v("AOF 有3种文件同步策略")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("策略")]),t._v(" "),s("th",[t._v("解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("appendfsync always")]),t._v(" "),s("td",[t._v("收到命令就立即写到磁盘,效率最慢.但是能保证完全的持久化")])]),t._v(" "),s("tr",[s("td",[t._v("appendfsync everysec")]),t._v(" "),s("td",[t._v("每秒写入磁盘一次,在性能和持久化方面做了很好的折中")])]),t._v(" "),s("tr",[s("td",[t._v("appendfsync no")]),t._v(" "),s("td",[t._v("完全以依赖os，一般同步周期是30秒")])])])]),t._v(" "),s("h5",{attrs:{id:"优点-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点-2"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("AOF方式数据安全性更高，配置得当，最多损失1秒的数据量")])]),t._v(" "),s("li",[s("p",[t._v("在不小心执行flushall命令，也可以通过AOF方式恢复(删除最后一个命令即可)")])]),t._v(" "),s("li",[s("p",[t._v("AOF 日志是一个增量日志文件，不会存在断电时出现损坏问题。即使出现问题，redis-check-aof 工具也能够轻松修复它。")])]),t._v(" "),s("li",[s("p",[t._v("当 AOF 变得太大时，Redis 能够在后台自动重写 AOF")])])]),t._v(" "),s("h5",{attrs:{id:"缺点-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点-2"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("ul",[s("li",[t._v("相同数据量来说，AOF文件体积通常大于RDB文件")]),t._v(" "),s("li",[t._v("数据持久化性能上来说，AOF 比 RDB 慢")])]),t._v(" "),s("h4",{attrs:{id:"rdb-aof混合方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rdb-aof混合方式"}},[t._v("#")]),t._v(" RDB-AOF混合方式")]),t._v(" "),s("p",[t._v("混合持久化是结合了 RDB 和 AOF 的优点，在写入的时候，先把当前的数据以 RDB 的形式写入文件的开头，再将后续的操作命令以 AOF 的格式存入文件。即以 RDB 作为全量备份，AOF 作为增量备份，来提高备份效率。这样既能保证 Redis 重启时的速度，又能防止数据丢失的风险， 这就是 Redis 4.0 之后推出的 "),s("strong",[t._v("RDB-AOF 混合持久化模式，其作为默认配置来使用")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"持久化机制选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#持久化机制选择"}},[t._v("#")]),t._v(" 持久化机制选择")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("如果对数据安全性有非常高的要求，建议 RDB 和 AOF 同时启用。")])]),t._v(" "),s("li",[s("p",[t._v("如果对数据安全性要求不是很高，能够容忍数据的丢失，建议单独使用 RDB。")])]),t._v(" "),s("li",[s("p",[t._v("不推荐单独使用 AOF，因为对于进行数据库备份、更快重启以及 AOF 引擎中出现错误的情况来说，RDB 是更好的选择。")])]),t._v(" "),s("li",[s("p",[t._v("如果没特殊要求，Redis又是4.x版本以上，可以选择RDB-AOF混合方式。")])])]),t._v(" "),s("p",[t._v("如果不是混合模式，而是普通的RDB与AOF一起启动时，Redis加载数据执行流程")]),t._v(" "),s("h3",{attrs:{id:"redis内存淘汰机制-拓展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis内存淘汰机制-拓展"}},[t._v("#")]),t._v(" Redis内存淘汰机制[拓展]")]),t._v(" "),s("h4",{attrs:{id:"引言-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引言-2"}},[t._v("#")]),t._v(" 引言")]),t._v(" "),s("p",[t._v("Redis 启动会加载一个配置：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("maxmemory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("byte"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   //内存上限\n")])])]),s("p",[t._v("默认值为 0 (window版的限制为100M)，表示默认设置Redis内存上限。但是真实开发还是需要提前评估key的体量，提前设置好内容上限。")]),t._v(" "),s("p",[t._v("此时思考一个问题，开发中，在设置完内存上限之后，如果Redis key达到上限了，该怎么办？这就设置到Redis的内存淘汰机制了。")]),t._v(" "),s("h4",{attrs:{id:"内存淘汰算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存淘汰算法"}},[t._v("#")]),t._v(" 内存淘汰算法")]),t._v(" "),s("p",[t._v("Redis内存淘汰机制也可以称之为key内卷机制，当资源不足时，该如何选择？")]),t._v(" "),s("p",[t._v("常见的内存淘汰机制分为四大类：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("**LRU：**LRU是Least recently used，最近最少使用的意思，简单的理解就是从数据库中删除最近最少访问的数据，该算法认为，你长期不用的数据，那么被再次访问的概率也就很小了，淘汰的数据为最长时间没有被使用，仅与时间相关。")])]),t._v(" "),s("li",[s("p",[t._v("**LFU：**LFU是Least Frequently Used，最不经常使用的意思，简单的理解就是淘汰一段时间内，使用次数最少的数据，这个与频次和时间相关。")])]),t._v(" "),s("li",[s("p",[t._v("**TTL：**Redis中，有的数据是设置了过期时间的，而设置了过期时间的这部分数据，就是该算法要解决的对象。如果你快过期了，不好意思，我内存现在不够了，反正你也要退休了，提前送你一程，把你干掉吧。")])]),t._v(" "),s("li",[s("p",[t._v("随机淘汰：生死有命，富贵在天。")])])]),t._v(" "),s("h3",{attrs:{id:"过期key处理-拓展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过期key处理-拓展"}},[t._v("#")]),t._v(" 过期Key处理[拓展]")]),t._v(" "),s("p",[t._v("接下讨论一个问题：Redis的key过期了，该如何清理问题。")]),t._v(" "),s("p",[t._v("Redis给出3种实现方案：")]),t._v(" "),s("p",[s("strong",[t._v("惰性删除")]),t._v("：当访问Key时，才去判断它是否过期，如果过期，直接干掉。这种方式对CPU很友好，但是一个key如果长期不用，一直存在内存里，会造成内存浪费。")]),t._v(" "),s("p",[s("strong",[t._v("定时删除")]),t._v("：设置键的过期时间的同时，创建一个定时器，当到达过期时间点，立即执行对Key的删除操作，这种方式对CPU不友好，得额外让出CPU维护定时器。")]),t._v(" "),s("p",[s("strong",[t._v("定期删除")]),t._v("：隔一段时间，对数据进行一次检查，删除里面的过期Key，至于要删除多少过期Key，检查多少数据，则由算法决定。")]),t._v(" "),s("p",[s("strong",[t._v("Redis服务器实际使用的是惰性删除和定期删除两种策略：通过配合使用这两种删除策略，可以很好地在合理使用CPU和避免浪费内存之间取得平衡。")])]),t._v(" "),s("h3",{attrs:{id:"redis编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis编程"}},[t._v("#")]),t._v(" Redis编程")]),t._v(" "),s("p",[t._v("实战练习")]),t._v(" "),s("p",[t._v("案例一：")]),t._v(" "),s("p",[t._v("1.将选手全表数据存入Reids中")]),t._v(" "),s("p",[t._v("难点：1）使用什么数据类型")]),t._v(" "),s("p",[t._v("​   2）当用户搜索时，如何处理？")]),t._v(" "),s("p",[t._v("2.编写投票接口，当投票成功后，在Redis中记录票数")]),t._v(" "),s("p",[t._v("3.编写一个实时的排行榜接口，当调用接口时，返回当前选手投票的排行。")]),t._v(" "),s("p",[t._v("案例二：")]),t._v(" "),s("p",[t._v("分布式服务器集群下，共享Session的设计实现。")]),t._v(" "),s("p",[t._v("案例三：")]),t._v(" "),s("p",[t._v("实现一个消息队列，一个生产端，一个消费端。")]),t._v(" "),s("h3",{attrs:{id:"demo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),s("p",[t._v("使用StackExchange.Redis生成100W的订单，然后用多个程序读取处理。")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" ListLeftPush：从左侧添加"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("返回集合总数\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" ListRightPush：从右侧添加，返回集合总数\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" ListLeftPop：从左侧取"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("个值，并删除\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" ListRightPop：从右侧取"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("个值"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("并删除\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" ListInsertBefore：指定的key指定"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),t._v("之前"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("左边"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("插入"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("个值\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" ListInsertAfter：指定的key指定"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),t._v("之后"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("右边"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("插入"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("个值\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" ListGetByIndex：获取key的指定索引对应的"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),t._v("值"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("从左往右算"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" ListRange：获取key的所有"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),t._v("，数据类型得一致 （也可以获取指定索引之间的"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),t._v("值，带扩展）\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" ListLength：获取指定key的数据的个数\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" ListRemove：删除指定key对应的指定"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),t._v("值，返回删除的个数\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" ListRightPopLeftPush：从List1右侧取一个值加到List2左侧"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("返回的是右侧取出来的这个值\n")])])]),s("p",[t._v("订单生成：GenerateList.cs")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("StackExchange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Redis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Diagnostics")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConnectionMultiplexer")]),t._v(" client "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConnectionMultiplexer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Connect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.239.128:6379"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" db "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetDatabase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//List 叫NumberList 然后往消息队列中放置10W个订单")]),t._v("\nConsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"订单生成中。。。"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计时器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stopwatch")]),t._v(" stopwatch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("Stopwatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动计时器")]),t._v("\nstopwatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListRightPush")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NumberList"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 停止计时器")]),t._v("\nstopwatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Stop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取经过的时间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeSpan")]),t._v(" elapsedTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stopwatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Elapsed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出秒和毫秒")]),t._v("\nConsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"程序运行时间: {0} 秒 {1} 毫秒"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("elapsedTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Seconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" elapsedTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Milliseconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("订单处理：GetList.cs")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("StackExchange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Redis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConnectionMultiplexer")]),t._v(" client "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConnectionMultiplexer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Connect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.239.128:6379"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" db "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetDatabase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" order "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListLeftPop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NumberList"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"procee1_正在处理："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListLength")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NumberList"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"订单处理完毕"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);